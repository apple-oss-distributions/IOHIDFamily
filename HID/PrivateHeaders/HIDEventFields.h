/*
*
* @APPLE_LICENSE_HEADER_START@
*
* Copyright (c) 2017-2023 Apple Computer, Inc.  All Rights Reserved.
*
* This file contains Original Code and/or Modifications of Original Code
* as defined in and that are subject to the Apple Public Source License
* Version 2.0 (the 'License'). You may not use this file except in
* compliance with the License. Please obtain a copy of the License at
* http://www.opensource.apple.com/apsl/ and read it before using this
* file.
*
* The Original Code and all software distributed under the License are
* distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
* EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
* INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
* Please see the License for the specific language governing rights and
* limitations under the License.
*
* @APPLE_LICENSE_HEADER_END@
*/

// DO NOT EDIT THIS FILE. IT IS AUTO-GENERATED. Refer to hideventgen.sh.

#include <IOKit/hid/IOHIDEvent.h>
#include <HID/HIDEvent.h>
#include <AppleFeatures/AppleFeatures.h>

enum {

	kEventFieldDataType_None,
	kEventFieldDataType_Integer,
	kEventFieldDataType_Double,
	kEventFieldDataType_Float,
	kEventFieldDataType_IOFixed,
};

typedef struct {
	IOHIDEventField field;
	uint8_t         fieldType:6;
	uint8_t         base:1;
	uint8_t         readonly:1;
	char *          name;
} HIDEventFieldInfo;

typedef struct {
	IOHIDEventField    value;
	HIDEventFieldInfo *eventFieldDescTable;

} HIDEventFieldDescSelectorTable;
typedef struct  {
	IOHIDEventField                 value;
	HIDEventFieldDescSelectorTable *selectorTables;
} HIDSelectorTable;

typedef struct {
	IOHIDEventType     type;
	HIDEventFieldInfo *eventFieldDescTable;
	HIDSelectorTable  *selectors;
} HIDEventFieldDescTableCollection;

